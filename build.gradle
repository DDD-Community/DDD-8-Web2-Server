buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'ddd.caffeine'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

ext {
    set('springCloudVersion', "2021.0.4")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.14'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    // openfeign
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

    // 외부 API 통신 테스트 위한 라이브러리
    testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")

    //IO
    implementation 'commons-io:commons-io:2.11.0'

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.0'

    //UUID
    implementation "com.fasterxml.uuid:java-uuid-generator:4.0.1"

    //hibernate-spatial : 좌표를 다루기 위해 import
    implementation group: 'org.hibernate', name: 'hibernate-spatial'

    //db_connection
    implementation 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'

    //warning: unknown enum constant When.MAYBE 이슈 안뜨게 하는 라이브러리.
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}
// QueryDSL
def querydslDir = "$buildDir/generated/'querydsl'"

// JPA 사용여부 및 사용 경로 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// build시 사용할 sourceSet 추가 설정
sourceSets {
    main.java.srcDir querydslDir
}


// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// querydsl이 compileClassPath를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

